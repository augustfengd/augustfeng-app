name: Terraform
"on":
  push:
    branches: main
  pull_request:
    branches: main
jobs:
  generate:
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.2.3
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install sops
        id: sops
        run: |-
          mkdir -p bin/
          curl -L --output bin/sops https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64
          chmod +x bin/sops
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: Install cue
        id: cue
        run: |-
          mkdir -p bin/
          curl -L --output - https://github.com/cue-lang/cue/releases/download/v0.4.3/cue_v0.4.3_linux_amd64.tar.gz | tar xzf - -C bin/ cue
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: make
        id: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
    runs-on: ubuntu-latest
    name: generate
  configure:
    needs:
      - generate
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.2.3
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install sops
        id: sops
        run: |-
          mkdir -p bin/
          curl -L --output bin/sops https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64
          chmod +x bin/sops
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: Install cue
        id: cue
        run: |-
          mkdir -p bin/
          curl -L --output - https://github.com/cue-lang/cue/releases/download/v0.4.3/cue_v0.4.3_linux_amd64.tar.gz | tar xzf - -C bin/ cue
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: make
        id: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: build/terraform
      - env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        name: Decrypt secrets
        run: cue decrypt
        working-directory: terraform/secrets
      - env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        name: Convert secrets
        run: cue convert
        working-directory: terraform/secrets
      - env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        name: Configure workspace
        run: cue configure :scripts
        working-directory: terraform
    name: configure
  plan:
    needs:
      - generate
      - configure
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.2.3
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install sops
        id: sops
        run: |-
          mkdir -p bin/
          curl -L --output bin/sops https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64
          chmod +x bin/sops
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: Install cue
        id: cue
        run: |-
          mkdir -p bin/
          curl -L --output - https://github.com/cue-lang/cue/releases/download/v0.4.3/cue_v0.4.3_linux_amd64.tar.gz | tar xzf - -C bin/ cue
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: make
        id: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: build/terraform
      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: build/terraform
    name: plan
  apply:
    needs:
      - generate
      - configure
    if: github.event_name =='push'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.2.3
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install sops
        id: sops
        run: |-
          mkdir -p bin/
          curl -L --output bin/sops https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64
          chmod +x bin/sops
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: Install cue
        id: cue
        run: |-
          mkdir -p bin/
          curl -L --output - https://github.com/cue-lang/cue/releases/download/v0.4.3/cue_v0.4.3_linux_amd64.tar.gz | tar xzf - -C bin/ cue
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
      - name: make
        id: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: build/terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: build/terraform
    name: apply
  finish:
    needs:
      - apply
    if: github.event_name =='push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    name: finish
