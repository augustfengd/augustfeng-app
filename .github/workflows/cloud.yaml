name: cloud
"on":
  push:
    branches: main
    paths:
      - cloud/**
      - cue.mod/**
  pull_request:
    branches: main
    paths:
      - cloud/**
      - cue.mod/**
concurrency: augustfeng.app
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - name: Archive Build
        run: tar cvz build | age -r age13x2cud63r8fr9qjlqdxjcuahlzxh3rvpgx6vgl263dkk2ghgpckqrg5r7p > build.tar.gz.age
      - uses: actions/upload-artifact@v3
        with:
          name: build.tar.gz.age
          path: build.tar.gz.age
      - name: Archive Secrets
        run: tar cvz cloud/secrets | age -r age13x2cud63r8fr9qjlqdxjcuahlzxh3rvpgx6vgl263dkk2ghgpckqrg5r7p > secrets.tar.gz.age
      - uses: actions/upload-artifact@v3
        with:
          name: secrets.tar.gz.age
          path: secrets.tar.gz.age
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
  configure:
    name: terraform cloud
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - name: Configure workspace
        run: cue configure ./cloud/augustfeng.app:terraform
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
  terraform-plan:
    name: terraform (plan)
    needs:
      - build
      - configure
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - id: init
        name: Terraform Init
        run: terraform init
        working-directory: build/terraform
      - id: plan
        name: Terraform Plan
        run: terraform plan
        working-directory: build/terraform
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
  terraform-apply:
    name: terraform (apply)
    needs:
      - build
      - configure
    runs-on: ubuntu-latest
    if: github.event_name =='push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - id: init
        name: Terraform Init
        run: terraform init
        working-directory: build/terraform
      - id: apply
        name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: build/terraform
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
  cluster-services-apply:
    name: cluster services (apply)
    needs:
      - terraform-apply
      - build
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      GOOGLE_APPLICATION_CREDENTIALS: application_default_credentials.json
      KUBECONFIG: kubeconfig.yaml
    if: github.event_name =='push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - run: printf '%s' "${GOOGLE_CREDENTIALS}" > "${GOOGLE_APPLICATION_CREDENTIALS}"
      - run: kubectl create ns argocd --dry-run=client -oyaml | kubectl apply -f -
      - run: kubectl -n argocd apply -f build/argocd/crds
      - run: kubectl -n argocd apply -f build/argocd
      - run: cue export ./cloud/augustfeng.app:kubernetes -e 'yaml.MarshalStream(appofapps.manifests)' --out text | kubectl -n argocd apply -f -
      - run: timeout 1m sh -c 'until kubectl get crds ingressroutes.traefik.containo.us; do sleep 5; done'
      - run: kubectl -n argocd apply -f build/argocd/traefik.containo.us
      - run: timeout 1m sh -c 'until kubectl get crds certificates.cert-manager.io; do sleep 5; done'
      - run: kubectl -n argocd apply -f build/argocd/cert-manager.io
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
  cluster-services-diff:
    name: cluster services (diff)
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      GOOGLE_APPLICATION_CREDENTIALS: application_default_credentials.json
      KUBECONFIG: kubeconfig.yaml
    if: github.event_name == 'pull_request'
    steps:
      - if: env.GOOGLE_CREDENTIALS != ''
        name: Checkout code
        uses: actions/checkout@v3
      - if: env.GOOGLE_CREDENTIALS != ''
        name: make
        run: make
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
      - if: env.GOOGLE_CREDENTIALS != ''
        run: printf '%s' "${GOOGLE_CREDENTIALS}" > "${GOOGLE_APPLICATION_CREDENTIALS}"
      - if: env.GOOGLE_CREDENTIALS != ''
        run: kubectl diff -f build/argocd
    container:
      image: ghcr.io/augustfengd/augustfeng.app/toolchain:latest
